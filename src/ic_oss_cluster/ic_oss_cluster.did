type ChainArgs = variant { Upgrade : record {}; Init : InitArgs };
type InitArgs = record { ecdsa_key_name : text; token_expiration : nat64 };
type Result = variant { Ok; Err : text };
type Result_1 = variant { Ok : blob; Err : text };
type Result_2 = variant { Ok : State; Err };
type State = record {
  ecdsa_token_public_key : text;
  ecdsa_key_name : text;
  managers : vec principal;
  token_expiration : nat64;
};
type Token = record { subject : principal; audience : principal; scope : text };
service : (opt ChainArgs) -> {
  admin_set_managers : (vec principal) -> (Result);
  admin_sign_access_token : (Token) -> (Result_1);
  get_state : (opt blob) -> (Result_2) query;
  validate_admin_set_managers : (vec principal) -> (Result) query;
}
